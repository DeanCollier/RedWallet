@model RedWallet.Models.DashboardModels.DashboardViewModel

@if (Model.SelectedWalletId == 0)
{
    <div class="d-flex p-2 justify-content-center">
        <div class="col-lg-15 text-center">
            <div>
                <h1>No Wallets Found.</h1>
                <div class="col-lg-15">
                    <button class="btn btn-long bg-secondary text-white shadow" onclick="location.href='@Url.Action("Create", "Wallet")'">Create New Wallet</button>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="row mt-3 mx-0 px-2 table-responsive card">
        <div class="col-lg-12 mx-0 px-0 shadow rounded" style="background: #b30f0f">
            <div id="wallet-dropdown" class="col-5">
                <h2>Select Wallet:</h2>
                <button style="float:left">
                    @Html.DropDownListFor(model => model.UserWallets[0], new SelectList(Model.UserWallets, "WalletId", "WalletName"), htmlAttributes: new { @id = "wallet-input" })
                </button>
            </div>
            <div id="balance-display" class="col-5">
                <button class="btn text-white shadow mb-3" onclick="location.href='@Url.Action("Update", "BTCInfo", new { walletId = Model.SelectedWalletId })'"><i class="fas fa-sync-alt"></i>  Refresh Wallet</button>
                <h1>@Model.WalletBalance BTC</h1>
            </div>
        </div>
    </div>

    <div class="row mt-3 mx-0 ">
        <div class="col-6 table-responsive">
            <button class="btn bg-secondary text-white shadow m-0 mb-1" onclick="location.href='@Url.Action("Index", "Transaction", new { walletId = Model.SelectedWalletId })'">Send</button>
            <div id="sends-display" class="col-5 table-responsive card shadow">
                <table class="table table-striped table-dark table-bordered" cellspacing="0">
                    <thead>
                        <tr>
                            <th class="th-sm text-center">
                                Created
                            </th>
                            <th class="th-sm text-center">
                                Transaction
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.WalletTransactions)
                        {
                            <tr>
                                <td>@item.Created.ToString("MM/dd/yyyy hh:mm tt")</td>
                                <td>@Html.ActionLink(item.TransactionHash, "Details", "Transaction", new { id = item.TransactionId }, new { @class = "detail-link" })</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="col-6">
            <button value="Receive" class="btn bg-secondary text-white shadow m-0 mb-1" onclick="location.href='@Url.Action("Index", "Address", new { walletId = Model.SelectedWalletId })'">Receive</button>
            <div id="receive-display" class="col-5 table-responsive card shadow">
                <table class="table table-striped table-dark table-bordered" cellspacing="0">
                    <thead>
                        <tr>
                            <th class="th-sm text-center">
                                Public Addresses Created
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.WalletAddresses)
                        {
                            <tr>
                                <td>@Html.ActionLink(item.PublicAddress, "Details", "Address", new { id = item.AddressId }, new { @class = "detail-link" })</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}

<script>
    window.addEventListener("DOMContentLoaded", function () {
        if (window.location.href.slice(window.location.href.lastIndexOf('/') + 1) != "") {
            document.getElementById("wallet-input").value = window.location.href.slice(window.location.href.lastIndexOf('/') + 1)

        }
        setLinks(document.getElementById("wallet-input").value)

    })
    function setLinks(walletId) {
        var walletLink = document.getElementById("wallet-nav-link")
        var sendLink = document.getElementById("send-nav-link")
        var requestLink = document.getElementById("request-nav-link")

        walletLink.setAttribute("href", `/Wallet/Details/${walletId}`)
        sendLink.setAttribute("href", `/Transaction?walletId=${walletId}`)
        requestLink.setAttribute("href", `/Address?walletId=${walletId}`)
    }
    function handleClick() {
        window.location.href = `/Dashboard/Index/${document.getElementById("wallet-input").value}`

    }
    // Drop down click event
    document.getElementById("wallet-input").addEventListener("change", handleClick)
</script>

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")

